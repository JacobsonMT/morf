<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
	xmlns:ui="http://java.sun.com/jsf/facelets">
    <h:body>
    	<ui:composition template="/WEB-INF/templates/template.xhtml">
	    	<ui:define name="js">
	    	    	<h:outputScript library="js" name="highcharts.js" />
	    	</ui:define>
     		<ui:define name="content">
			<p:outputPanel id="centerPanel" layout="block">
				<p:outputPanel id="jobsPanel" layout="block"
					rendered="#{userManager.authenticated}">
					<div class="title">
					<h1>MoRF<sub>CHiBi_<i>Web</i></sub></h1>
					<h2>Computational Identification of MoRFs in Protein Sequences</h2>
					<h3>Beta Version: 0.11</h3>	
					</div>
					<h:form id="inputForm">
						<p:growl id="growl" life="2000" globalOnly="true" severity="info"/>
						<p:growl id="stickyGrowl" sticky="true" globalOnly="true" severity="error,fatal,warn" escape="false">
						        <h:outputScript>
						            $("#inputForm\\:stickyGrowl_container").effect( "shake", { times: 3, distance: 4 } );
						        </h:outputScript>
						</p:growl>
						
						<h:panelGrid columns="2" style="margin:0 auto;width:95%;"
							cellpadding="5" columnClasses="optionsPanel, inputPanel">
							<p:panel style="border-style:none;"/>
							<h:outputText value="Enter one protein sequence in FASTA format" />
							<p:panel style="border-style:none;">
								<h:panelGrid columns="2" style="margin:0 auto;width:100%;"
									cellpadding="5">
									<f:facet name="header"> 
									<h:outputText value="Options"/>
									</f:facet>
									<h:outputText value="Training Dataset" style="text-align:center;" rendered="#{settingsCache.showTraining}"/>
							        <p:selectOneButton value="#{indexView.trainOnDataset}" rendered="#{settingsCache.showTraining}">
						            <f:selectItem itemLabel="Full" itemValue="True" />
						            <f:selectItem itemLabel="Training" itemValue="False" />
						        </p:selectOneButton>
						        <h:outputText value=""/>
						        <h:outputText value=""/>
									<h:outputText value="Email:"/>
							        <p:inplace editor="true" emptyLabel = "Click To Set Email">
							            <p:inputText value="#{indexView.email}" label="text">
							            <f:validateRegex pattern="^.+\@.+\..+$" />
							            </p:inputText>
							        </p:inplace>
						        </h:panelGrid>
							</p:panel>
							<p:inputTextarea id="inputContent" value="#{indexView.content}" rows="10" style="width:100%;" autoResize="false" />
							<p:panel style="border-style:none;">
								<h:panelGrid columns="1" style="margin:0 auto;width:100%;"
									cellpadding="5">

						        </h:panelGrid>
							   

							</p:panel>
							<p:panel style="border-style:none;">
						<p:commandButton value="Submit Job" icon="ui-icon-disk"
							update=":formConfirm:confirmDialog"
							actionListener="#{indexView.validateJob}"
							styleClass="ui-priority-primary" style="margin-right:25px" oncomplete="PF('confirmDlg').show()"/>
						<p:commandButton value="Clear" type="button" icon="ui-icon-trash" styleClass="ui-priority-primary" onclick="clearFastaInput()" style="margin-right:25px"/>
						<p:commandButton value="Example Input" icon="ui-icon-copy" styleClass="ui-priority-primary" 
										actionListener="#{indexView.applyExampleInput}" update=":inputForm"/>					    
						</p:panel>

						</h:panelGrid>

					</h:form>
					<p:separator />
					<br />
					<h:form id="formJobs">
						<p:dataTable id="tableJobs" var="job" value="#{userManager.jobs}"
							rowStyleClass="#{job.complete eq true ? (job.failed eq true ? 'red-row': 'green-row') : 'yellow-row'}"
							sortBy="#{job.submittedDate}"
							scrollable="true" scrollHeight="350"
							resizableColumns="true"
							emptyMessage="No Jobs Found.">
							<f:facet name="header">
					            Jobs
					        </f:facet>
					        
							<p:column style="width:32px;">
								<p:commandButton update=":formJobs:jobDetail"
									oncomplete="PF('jobDialog').show()" icon="ui-icon-search"
									title="View">
									<f:setPropertyActionListener value="#{job}"
										target="#{indexView.selectedJob}" />
								</p:commandButton>
							</p:column>
					        
							<p:column headerText="Id" style="width:64px;text-align: center;">
								<h:outputText value="#{job.id}" />
							</p:column>
							<p:column headerText="Label" style="text-align: center;">
								<h:outputText value="#{job.name}" />
							</p:column>
							<p:column headerText="Size [residues]" style="text-align: center;">
								<h:outputText value="#{job.sequenceSize}" />
							</p:column>
							<p:column headerText="Training" style="text-align: center;" rendered="#{settingsCache.showTraining}">
								<h:outputText value="#{job.trainOnFullData ? 'Full' : 'Training'}" />
							</p:column>
							<p:column headerText="Submitted" style="text-align: center;">
								<h:outputText value="#{job.submittedDate}" />
							</p:column>

							<p:column headerText="Status" style="text-align: center;">
								<h:outputText value="#{job.status}" />
							</p:column>

							<p:column headerText="Results" style="width:128px;text-align: center">
								<p:commandButton title="Download" ajax="false"
									onclick="PrimeFaces.monitorDownload(start, stop);"
									icon="ui-icon-arrowthick-1-s"
									disabled="#{!job.complete or job.failed}">
									<p:fileDownload value="#{job.file}" />
								</p:commandButton>
								<p:commandButton title="Graph"
									icon="fa fa-area-chart"
									action="#{indexView.createChart}"
									oncomplete="handleCreateChart(xhr, status, args);PF('chartDlgWdg').show()"
									disabled="#{!job.complete or job.failed}">
									<f:setPropertyActionListener value="#{job}"
										target="#{indexView.selectedJob}" />
								</p:commandButton>
								<p:commandButton
									update=":inputForm:growl, :formJobs:tableJobs"
									icon="fa fa-remove" title="Cancel"
									action="#{indexView.cancelJob}"
									disabled="#{job.running}">
									<f:setPropertyActionListener value="#{job}"
										target="#{indexView.jobToRemove}" />
								</p:commandButton>
							</p:column>

							<p:column headerText="Save" style="width:96px;text-align: center">
								<p:link outcome="savedJob"
									target="_blank" rendered="#{job.saved}">
									<span class="fa fa-external-link" style="display:inline-block;" >
									<h:outputText value="&nbsp;#{job.saveTimeLeft} hrs left" />
									</span>
								    <f:param name="key" value="#{job.savedKey}" />
								</p:link>

								
								<p:commandButton icon="fa fa-heart" action="#{indexView.saveJob}" update = ":inputForm:stickyGrowl, tableJobs" rendered="#{!job.saved}">
									<f:setPropertyActionListener value="#{job}" target="#{indexView.jobToSave}" />	
								</p:commandButton>
							</p:column>
						</p:dataTable>

						<p:dialog header="Job Info" widgetVar="jobDialog" modal="false"
							showEffect="fade" hideEffect="fade" resizable="false" dynamic="true">
							<p:outputPanel id="jobDetail" style="text-align:center;">
								<p:panelGrid columns="2">
									<h:outputText value="Id:" />
									<h:outputText value="#{indexView.selectedJob.id}" />
								
									<h:outputText value="Label:" />
									<h:outputText value="#{indexView.selectedJob.name}" />
									
									<h:outputText value="Size:" />
									<h:outputText value="#{indexView.selectedJob.sequenceSize}" />
									
									<h:outputText value="Training:" rendered="#{settingsCache.showTraining}"/>
									<h:outputText value="#{indexView.selectedJob.trainOnFullData ? 'Full' : 'Training'}" rendered="#{settingsCache.showTraining}"/>

									<h:outputText value="Content:" />
									<h:outputText
										value="#{of:abbreviate(indexView.selectedJob.content, 15)}" />

									<h:outputText value="Submitted:" />
									<h:outputText value="#{indexView.selectedJob.submittedDate}" />

									<h:outputText value="Status:" />
									<h:outputText value="#{indexView.selectedJob.status}" />
									
									<h:outputText value="Email:"/>
							        <p:inplace editor="true" emptyLabel = "Click To Set Email">
							            <p:inputText value="#{indexView.selectedJob.email}" label="text" rendered="#{not empty indexView.selectedJob.email}"/>
							            <p:inputText value="#{indexView.selectedJob.email}" label="text" rendered="#{empty indexView.selectedJob.email}"/>
							        </p:inplace>
																	
									<h:outputText value="Save for later:" />										
									<p:link outcome="savedJob"
										target="_blank" rendered="#{indexView.selectedJob.saved}">
										<span class="fa fa-external-link" style="display:inline-block;" >
										<h:outputText value="&nbsp;#{indexView.selectedJob.saveTimeLeft} hrs left" />
										</span>
									    <f:param name="key" value="#{indexView.selectedJob.savedKey}" />
									</p:link>					
									<p:commandButton icon="fa fa-heart" action="#{indexView.saveJob}" update = ":inputForm:stickyGrowl, :formJobs:jobDetail" rendered="#{!indexView.selectedJob.saved}">
										<f:setPropertyActionListener value="#{indexView.selectedJob}" target="#{indexView.jobToSave}" />	
									</p:commandButton>

									<h:outputText value="Result:"
										rendered="#{indexView.selectedJob.complete}" />
									<p:panel style="border-style:none;" rendered="#{indexView.selectedJob.complete}">
										<p:commandButton value="Download" ajax="false"
											onclick="PrimeFaces.monitorDownload(start, stop);"
											icon="ui-icon-arrowthick-1-s"
											rendered="#{indexView.selectedJob.complete}"
											disabled="#{!indexView.selectedJob.complete or indexView.selectedJob.failed}">
											<p:fileDownload value="#{indexView.selectedJob.file}" />
										</p:commandButton>
										<p:commandButton value="Graph"
											icon="fa fa-area-chart"
											action="#{indexView.createChart}"
											oncomplete="handleCreateChart(xhr, status, args);PF('chartDlgWdg').show()"
											rendered="#{indexView.selectedJob.complete}"
											disabled="#{!indexView.selectedJob.complete or indexView.selectedJob.failed}"/>
									</p:panel>
									
								</p:panelGrid>
							</p:outputPanel>
						</p:dialog>
						
						<p:socket onMessage="pushUpdateHandler" channel="/jobDone"/>
						
						<p:remoteCommand name="pushUpdate" update="tableJobs"/>


					</h:form>
					<h:form id="chartForm">						
						<p:dialog id="chartDlg" fitViewport="true" modal="false" widgetVar="chartDlgWdg" resizable="false" height="500px" width="900px">
							
							<div id="hc_container" style="width: 100%; height: 100%;"/>
														
						</p:dialog>
						</h:form>
					
				</p:outputPanel>
				<p:outputPanel id="authenticatePanel" layout="block"
					rendered="#{!(userManager.authenticated)}">
					<h3>Please authenticate your session</h3>
					<h:form>
						<p:growl id="authenticateGrowl" life="2000" />
						<h:panelGrid columns="2" style="margin-bottom:10px"
							cellpadding="5">
							<p:outputLabel for="password" value="Passphrase: " />
							<p:password id="password" binding="#{pass}" />
						</h:panelGrid>
						<p:commandButton value="Authenticate"
							icon="ui-icon-arrowthickstop-1-e"
							update="authenticateGrowl :centerPanel"
							action="#{userManager.authenticate(pass.value)}"
							styleClass="ui-priority-primary" />
					</h:form>
				</p:outputPanel>
			</p:outputPanel>
    		</ui:define>
    		<ui:define name="dialogs">
    			<h:form id="formConfirm" rendered="#{userManager.authenticated}">
							<p:confirmDialog id="confirmDialog" header="Submit Job?"
								widgetVar="confirmDlg" showEffect="fade" severity="" style="min-width:349px;" closeOnEscape="true">
								<f:facet name="message">
									<p style="width:349px;font-style: italic;">After submission your job status/results will be remain available at the provided link for a period of #{settingsCache.jobPurgeTime}h.</p>
									<p style="width:349px;font-style: italic;">If an email is provided, you will receive notice of job completion.</p>
									<p:separator/>
									<h:panelGrid columns="2" style="margin:0 auto;width:100%;" cellpadding="5">
										<h:outputText value="Label:"/>
										<p:inplace editor="true" emptyLabel="Click To Set Label">
											<p:inputText value="#{indexView.label}" label="text" required="true">
												<f:validateRegex pattern="[^\s\-]+" />
											</p:inputText>
										</p:inplace>
										<h:outputText value="Sequence Size:"/>
										<h:outputText value="#{indexView.sequenceSize}"/>
										<h:outputText value="Training:" rendered="#{settingsCache.showTraining}"/>
							        <p:selectOneButton value="#{indexView.trainOnDataset}" rendered="#{settingsCache.showTraining}">
						            <f:selectItem itemLabel="Full" itemValue="True" />
						            <f:selectItem itemLabel="Training" itemValue="False" />
						        </p:selectOneButton>
										<h:outputText value="Email:"/>
										<p:inplace editor="true" emptyLabel="Click To Set Email">
											<p:inputText value="#{indexView.email}" label="text">
												<f:validateRegex pattern="^.+\@.+\..+$" />
											</p:inputText>
										</p:inplace>
									</h:panelGrid>
								</f:facet>
								<div style="text-align:center">
								<p:commandButton value="Yes"
									actionListener="#{indexView.submitJob}"
									update=":inputForm:stickyGrowl, :inputForm:growl,:formJobs:tableJobs"
									styleClass="ui-confirmdialog-yes" icon="ui-icon-check"
									onclick="PF('confirmDlg').hide()" style="margin: 0 15px 0 0;"/>
								<p:commandButton value="No" type="button"
									styleClass="ui-confirmdialog-no" icon="ui-icon-close"
									onclick="PF('confirmDlg').hide()"/>
									</div>
							</p:confirmDialog>
				</h:form>
    		</ui:define>
    	</ui:composition>
 
    </h:body>
 
</html>