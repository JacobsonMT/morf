<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:of="http://omnifaces.org/functions"
	xmlns:ui="http://java.sun.com/jsf/facelets">
<h:body>
	<ui:composition template="/WEB-INF/templates/template.xhtml">
		<ui:define name="js">
			<h:outputScript library="js" name="highcharts.js" />
		</ui:define>
		<ui:define name="content">
			<p:outputPanel id="centerPanel" layout="block">
				<p:outputPanel id="jobsPanel" layout="block"
					rendered="#{userManager.authenticated}">
					<div class="title">
						<h1>
							MoRF<sub>CHiBi_<i>Web</i></sub>
						</h1>
						<h2>Computational Identification of MoRFs in Protein
							Sequences</h2>
						<h3>Beta Version: 0.11</h3>
					</div>
					<h:form id="inputForm">
						<p:growl id="growl" life="2000" globalOnly="true" severity="info" />
						<p:growl id="stickyGrowl" sticky="true" globalOnly="true"
							severity="error,fatal,warn" escape="false">
							<h:outputScript>
						            $("#inputForm\\:stickyGrowl_container").effect( "shake", { times: 3, distance: 4 } );
						        </h:outputScript>
						</p:growl>

						<h:panelGrid columns="2" style="margin:0 auto;width:95%;"
							cellpadding="5" columnClasses="optionsPanel, inputPanel">
							<p:panel style="border-style:none;" />
							<h:outputText value="Enter one protein sequence in FASTA format" />
							<p:panel style="border-style:none;height:100%;" header="Options">
								<h:panelGrid columns="2" style="margin:0 auto;width:100%;"
									cellpadding="5">
									<h:outputText value="Training Dataset"
										style="text-align:center;"
										rendered="#{settingsCache.showTraining}" />
									<p:selectOneButton value="#{indexView.trainOnDataset}"
										rendered="#{settingsCache.showTraining}">
										<f:selectItem itemLabel="Full" itemValue="True" />
										<f:selectItem itemLabel="Training" itemValue="False" />
									</p:selectOneButton>
									<h:outputText value="Email:" />
									<p:inplace editor="true" emptyLabel="Click To Set Email"
										style="min-width:190px;">
										<p:inputText value="#{indexView.email}" label="text">
											<f:validateRegex pattern="^.+\@.+\..+$" />
										</p:inputText>
									</p:inplace>
								</h:panelGrid>
							</p:panel>
							<p:inputTextarea id="inputContent" value="#{indexView.content}"
								rows="10" style="width:100%;" autoResize="false" />
							<p:panel style="border-style:none;">
								<h:panelGrid columns="1" style="margin:0 auto;width:100%;"
									cellpadding="5">

								</h:panelGrid>


							</p:panel>
							<p:panel style="border-style:none;">
								<p:commandButton value="Submit Job" icon="ui-icon-disk"
									update=":formEmailDlg:panelEmailDlg, :inputForm:stickyGrowl, :inputForm:growl,:formJobs:tableJobs"
									actionListener="#{indexView.submitJob}"
									styleClass="ui-priority-primary" style="margin-right:25px"
									oncomplete="handleValidateJobSubmitComplete(xhr, status, args)" />
<!-- 								<p:commandButton value="Submit Job" icon="ui-icon-disk"
									update=":formConfirm:confirmDialog, :inputForm:stickyGrowl, :inputForm:growl,:formJobs:tableJobs"
									actionListener="#{indexView.validateJob}"
									styleClass="ui-priority-primary" style="margin-right:25px"
									oncomplete="handleValidateJobSubmitComplete(xhr, status, args)" /> -->
								<p:commandButton value="Clear" type="button"
									icon="ui-icon-trash" styleClass="ui-priority-primary"
									onclick="clearFastaInput()" style="margin-right:25px" />
								<p:commandButton value="Example Input" icon="ui-icon-copy"
									styleClass="ui-priority-primary"
									actionListener="#{indexView.applyExampleInput}"
									update=":inputForm" />
							</p:panel>

						</h:panelGrid>
					
					</h:form>
					<p:separator />
					<br />
					<h:form id="formJobs">
						<p:dataTable id="tableJobs" var="job" value="#{userManager.jobs}"
							rowStyleClass="#{job.complete eq true ? (job.failed eq true ? 'red-row': 'green-row') : 'yellow-row'}"
							sortBy="#{job.submittedDate}" scrollable="true"
							scrollHeight="350" resizableColumns="true"
							emptyMessage="No Jobs Found.">
							<f:facet name="header">
					            Jobs
					        </f:facet>

							<p:column style="width:32px;">
								<p:commandButton update=":inputForm:growl, :formJobs:tableJobs"
									icon="fa fa-remove" title="Cancel"
									action="#{indexView.cancelJob}" disabled="#{job.running}"
									styleClass="red">
									<p:confirm header="Confirmation" message="Are you sure?" icon="ui-icon-alert" />
									<f:setPropertyActionListener value="#{job}"
										target="#{indexView.jobToRemove}" />
								</p:commandButton>
							</p:column>

							<p:column headerText="Id" style="width:64px;text-align: center;">
								<h:outputText value="#{job.id}" />
							</p:column>
							<p:column headerText="Label" style="text-align: center;">
								<h:outputText value="#{job.name}" />
							</p:column>
							<p:column headerText="Size [residues]"
								style="text-align: center;">
								<h:outputText value="#{job.sequenceSize}" />
							</p:column>
							<p:column headerText="Training" style="text-align: center;"
								rendered="#{settingsCache.showTraining}">
								<h:outputText
									value="#{job.trainOnFullData ? 'Full' : 'Training'}" />
							</p:column>
							<p:column headerText="Submitted" style="text-align: center;">
								<h:outputText value="#{job.submittedDate}" />
							</p:column>

							<p:column headerText="Status" style="text-align: center;">
								<h:outputText value="#{job.status}" />
							</p:column>

							<p:column headerText="Results" style="text-align: center">
								<p:commandButton update=":formJobs:jobDetail"
									oncomplete="PF('jobDialog').show()" icon="ui-icon-search"
									title="View" value="#{job.complete ? 'Ready' : 'Not Ready'}">
									<f:setPropertyActionListener value="#{job}"
										target="#{indexView.selectedJob}" />
								</p:commandButton>
								<p:commandButton title="Graph" icon="fa fa-area-chart"
									action="#{indexView.createChart}"
									oncomplete="handleCreateChart(xhr, status, args);PF('chartDlgWdg').show()"
									disabled="#{!job.complete or job.failed}" value="Graph">
									<f:setPropertyActionListener value="#{job}"
										target="#{indexView.selectedJob}" />
								</p:commandButton>
								<!-- 								<p:commandButton title="Download" ajax="false"
									onclick="PrimeFaces.monitorDownload(start, stop);"
									icon="ui-icon-arrowthick-1-s"
									disabled="#{!job.complete or job.failed}">
									<p:fileDownload value="#{job.file}" />
								</p:commandButton> -->
							</p:column>

							<p:column headerText="Saved For"
								style="width:96px;text-align: center">
								<h:outputText value="&nbsp;#{job.saveTimeLeft} hrs"
									rendered="#{job.saved}" />

								<!-- 								<p:link outcome="savedJob"
									target="_blank" rendered="#{job.saved}">
									<span class="fa fa-external-link" style="display:inline-block;" >
									<h:outputText value="&nbsp;#{job.saveTimeLeft} hrs" />
									</span>
								    <f:param name="key" value="#{job.savedKey}" />
								</p:link> -->


								<p:commandButton icon="fa fa-heart"
									action="#{indexView.saveJob}"
									update=":inputForm:stickyGrowl, tableJobs"
									rendered="#{!job.saved}">
									<f:setPropertyActionListener value="#{job}"
										target="#{indexView.jobToSave}" />
								</p:commandButton>
							</p:column>
						</p:dataTable>

						<p:dialog header="Job Info" widgetVar="jobDialog" modal="false"
							showEffect="fade" hideEffect="fade" resizable="false"
							dynamic="true" width="500px">
							<p:outputPanel id="jobDetail" style="text-align:center;width:100%">
								<p:panelGrid style="width:100%;" styleClass="dialogPanelLabelColumn">
									<p:row>
										<p:column>
											<h:outputText value="Id:" />
										</p:column>
										<p:column>
											<h:outputText value="#{indexView.selectedJob.id}" />
										</p:column>
									</p:row>
									<p:row>
										<p:column>
											<h:outputText value="Label:" />
										</p:column>
										<p:column>
											<h:outputText value="#{indexView.selectedJob.name}" />
										</p:column>
									</p:row>
									<p:row>
										<p:column>
											<h:outputText value="Size:" />
										</p:column>
										<p:column>
											<h:outputText value="#{indexView.selectedJob.sequenceSize}" />
										</p:column>
									</p:row>
									<p:row>
										<p:column rendered="#{settingsCache.showTraining}">
											<h:outputText value="Training:" />
										</p:column>
										<p:column>
											<h:outputText
												value="#{indexView.selectedJob.trainOnFullData ? 'Full' : 'Training'}" />
										</p:column>
									</p:row>
									<p:row>
										<p:column>
											<h:outputText value="Content:" />
										</p:column>
										<p:column>
											<h:outputText
												value="#{of:abbreviate(indexView.selectedJob.content, 15)}" />
										</p:column>

									</p:row>
									<p:row>
										<p:column>
											<h:outputText value="Submitted:" />
										</p:column>
										<p:column>
											<h:outputText value="#{indexView.selectedJob.submittedDate}" />
										</p:column>

									</p:row>
									<p:row>
										<p:column>
											<h:outputText value="Status:" />
										</p:column>
										<p:column>
											<h:outputText value="#{indexView.selectedJob.status}" />
										</p:column>
									</p:row>
									<p:row>
										<p:column>
											<h:outputText value="Email:" />
										</p:column>
										<p:column>
											<p:inplace editor="true" emptyLabel="Click To Set Email">
												<p:inputText value="#{indexView.selectedJob.email}"
													label="text"
													rendered="#{not empty indexView.selectedJob.email}" />
												<p:inputText value="#{indexView.selectedJob.email}"
													label="text"
													rendered="#{empty indexView.selectedJob.email}" />
											</p:inplace>
										</p:column>
									</p:row>
									<p:row>
										<p:column>
											<h:outputText value="Saved For:" />
										</p:column>
										<p:column>
											<h:outputText
												value="&nbsp;#{indexView.selectedJob.saveTimeLeft} hrs"
												rendered="#{indexView.selectedJob.saved}" />

											<!-- 									<p:link outcome="savedJob"
										target="_blank" rendered="#{indexView.selectedJob.saved}">
										<span class="fa fa-external-link" style="display:inline-block;" >
										<h:outputText value="&nbsp;#{indexView.selectedJob.saveTimeLeft} hrs left" />
										</span>
									    <f:param name="key" value="#{indexView.selectedJob.savedKey}" />
									</p:link>	 -->
											<p:commandButton icon="fa fa-heart"
												action="#{indexView.saveJob}"
												update=":inputForm:stickyGrowl, :formJobs:jobDetail"
												rendered="#{!indexView.selectedJob.saved}">
												<f:setPropertyActionListener
													value="#{indexView.selectedJob}"
													target="#{indexView.jobToSave}" />
											</p:commandButton>
										</p:column>
									</p:row>
									<p:row>
										<p:column colspan="2"
											rendered="#{indexView.selectedJob.complete}">
											<p:panel style="border-style:none;"
												rendered="#{indexView.selectedJob.complete}">
												<p:commandButton value="Download" ajax="false"
													onclick="PrimeFaces.monitorDownload(start, stop);"
													icon="ui-icon-arrowthick-1-s"
													disabled="#{!indexView.selectedJob.complete or indexView.selectedJob.failed}">
													<p:fileDownload value="#{indexView.selectedJob.file}" />
												</p:commandButton>
												<p:commandButton value="Graph" icon="fa fa-area-chart"
													action="#{indexView.createChart}"
													oncomplete="handleCreateChart(xhr, status, args);PF('chartDlgWdg').show()"
													disabled="#{!indexView.selectedJob.complete or indexView.selectedJob.failed}" />
												<p:button value="Link" icon="fa fa-external-link"
													outcome="savedJob" target="_blank"
													rendered="#{indexView.selectedJob.saved}" >
															<f:param name="key" value="#{indexView.selectedJob.savedKey}" />
													</p:button>

											</p:panel>
										</p:column>
									</p:row>

								</p:panelGrid>
							</p:outputPanel>
						</p:dialog>

						<p:socket onMessage="pushUpdateHandler" channel="/jobDone" />

						<p:remoteCommand name="pushUpdate" update="tableJobs" />


					</h:form>
					<h:form id="chartForm">
						<p:dialog id="chartDlg" fitViewport="true" modal="false"
							widgetVar="chartDlgWdg" resizable="false" height="500px"
							width="80%">

							<div id="hc_container" style="width: 100%; height: 100%;" />

						</p:dialog>
					</h:form>

				</p:outputPanel>
				<p:outputPanel id="authenticatePanel" layout="block"
					rendered="#{!(userManager.authenticated)}">
					<h3>Please authenticate your session</h3>
					<h:form>
						<p:growl id="authenticateGrowl" life="2000" />
						<h:panelGrid columns="2" style="margin-bottom:10px"
							cellpadding="5">
							<p:outputLabel for="password" value="Passphrase: " />
							<p:password id="password" binding="#{pass}" />
						</h:panelGrid>
						<p:commandButton value="Authenticate"
							icon="ui-icon-arrowthickstop-1-e"
							update="authenticateGrowl :centerPanel"
							action="#{userManager.authenticate(pass.value)}"
							styleClass="ui-priority-primary" />
					</h:form>
				</p:outputPanel>
			</p:outputPanel>
		</ui:define>
		<ui:define name="dialogs">
		
		<h:form id="formEmailDlg" rendered="#{userManager.authenticated}">
				<p:dialog id="noEmailDlg" header="No Email Provided"
					widgetVar="noEmailDlg" showEffect="fade"
					style="min-width:349px;" closeOnEscape="true" resizable="false" >
					<p:panel id="panelEmailDlg">
						<p style="width: 349px; font-style: italic;">No email was provided, you can set one below to receive notice and results of job completion by email.</p>
						<p style="width: 349px; font-style: italic;">Otherwise, your job will available at this 
									<p:link outcome="savedJob" value="LINK"
										target="_blank" rendered="#{indexView.submittedJob.saved}">
									    <f:param name="key" value="#{indexView.submittedJob.savedKey}" />
									</p:link> for the next #{settingsCache.jobPurgeTime} hours.</p>
						<p:separator />
						<h:panelGrid columns="2" style="margin:0 auto;width:100%;"
							cellpadding="5">
							<h:outputText value="Label:" />
							<h:outputText value="#{indexView.submittedJob.name}" />
							<h:outputText value="Sequence Size:" />
							<h:outputText value="#{indexView.submittedJob.sequenceSize}" />
								<h:outputText value="Training:" rendered="#{settingsCache.showTraining}"/>
								<h:outputText value="#{indexView.submittedJob.trainOnFullData ? 'Full' : 'Training'}" rendered="#{settingsCache.showTraining}"/>
							<h:outputText value="Email:" />
											<p:inplace editor="true" emptyLabel="Click To Set Email">
												<p:inputText value="#{indexView.submittedJob.email}"
													label="text"/>
											</p:inplace>
						</h:panelGrid>
						</p:panel>
				</p:dialog>
				</h:form>
		
		
			<h:form id="formConfirm" rendered="#{userManager.authenticated}">
			    <p:confirmDialog global="true" showEffect="fade">
			        <p:commandButton value="Yes" type="button" styleClass="ui-confirmdialog-yes" icon="ui-icon-check" />
			        <p:commandButton value="No" type="button" styleClass="ui-confirmdialog-no" icon="ui-icon-close" />
			    </p:confirmDialog>
			</h:form>
		</ui:define>
	</ui:composition>

</h:body>

</html>